name: "deploy"
on:
  workflow_call:
    inputs:
      application:
        required: true
        type: string
      version:
        required: true
        type: string
        description: format MAJOR.MINOR.PATCH
      manual_deploy:
        required: false
        type: boolean
        default: false

concurrency: ${{ inputs.application }}
jobs:
  deploy-qa:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.application }}-QA
    steps:
      - name: deploy
        run: echo 'deploying "${{ inputs.application }}" version "${{ inputs.version }}" to QA'
  gatekeep-staging:
    runs-on: ubuntu-latest
    needs: [deploy-qa]
    if: ${{ inputs.manual_deploy }}
    environment:
      name: ${{ inputs.application }}-gatekeep-staging
    steps:
      - name: gatekeep
        run: echo "awaiting approval"
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [deploy-qa, gatekeep-staging]
    if: |
      always() &&
      needs.deploy-qa.result == 'success' &&
      (needs.gatekeep-staging.result == 'success' || needs.gatekeep-staging.result == 'skipped')
    environment:
      name: ${{ inputs.application }}-staging
    steps:
      - name: deploy
        run: echo 'deploying "${{ inputs.application }}" version "${{ inputs.version }}" to staging'
  gatekeep-production:
    runs-on: ubuntu-latest
    needs: [deploy-staging]
    if: ${{ inputs.manual_deploy }}
    environment:
      name: ${{ inputs.application }}-gatekeep-production
    steps:
      - name: gatekeep
        run: echo "awaiting approval"
  deploy-production:
    runs-on: ubuntu-latest
    needs: [deploy-staging, gatekeep-production]
    if: |
      always() &&
      needs.deploy-staging.result == 'success' &&
      (needs.gatekeep-production.result == 'success' || needs.gatekeep-production.result == 'skipped')
    environment:
      name: ${{ inputs.application }}-production
    steps:
      - name: deploy
        run: echo 'deploying "${{ inputs.application }}" version "${{ inputs.version }}" to production'
